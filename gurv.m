clc;
close all;
clear all;

format shortG
%[A, B, C] = gurv([(53*2)^4 (53+3)^3 (53-4)^2 53+5 53-6])
%[A, B, C] = gurv([0.009 0.02 0.1 0])
[A, B, C] = gurv([1 53 2*53 3*53])


function [Ust, Mnrs, Mtrx] = gurv(D)
% Определение устойчивости системы методом Рауса-Гурвица, заданной при
% помощи следующей передаточной функции.
% 
%          B(s)   
%   W(s) = ----,
%          D(s)     
% 
% Здесь D(s) - характеристический полином.
% 
% D(s) = a0*s^n + a1*s^(n-1) + a2*s^(n-2) + ... + an 
%  
%   a0, a1, a2, ..., an - коэффициенты полинома D.
% 
% 
% Обращение к функции RAUS_GUR может быть выполнено двумя способами:
% 
%   Способ 1.
% 
%   [Ust, Mnrs, Mtrx]  = raus_gur(D);
% 
%   Входные параметры:
% D - вектор коэффициентов знаменателя (характеристический полином)
% 
%   Выходные параметры:
% Ust - строковое значение, сообщающее устойчива система или неустойчива
%  
% Mnrs - вектор значений миноров от меньшего размера к большему,
% которые необходимо вычислить для оценки устойчивости по методу Рауса-Гурвица.
% Согласно методу Рауса-Гурвица, система устойчива, если все миноры положительны.
% Вычисления значения внешнего минора не имеют смысла, так как его знак
% всегда будет совпадать со знаком предыдущего минора.
% 
% Mtrx - полная матрица Рауса-Гурвица для данного полинома.
% 
%   Способ 2.
% 
%   [Ust, Mnrs, Mtrx]  = raus_gur(W);
% 
%   Входные параметры:
% W - объект класса LTI (см. описание Control System Toolbox)  
% 
% Выходные параметры аналогичны вышеописанным.
% 
% 
% Ориентирована на работу в версии MATLAB 2022a

if isa(D,'tf')
   [~,D]=tfdata(D,'v');
end
n=length(D)-2;
Dr=[D zeros(1,n)];
A=flipud(reshape(Dr,2,[]));
Mtrx=cell2mat(arrayfun(@(x)(circshift(A',x))',(0:n/2)',"UniformOutput",false));
Mnrs=cell2mat(arrayfun(@(x)det(Mtrx(1:x,1:x)),(2:n)',"UniformOutput",false));
Z='';
if any(Mnrs<0)
    Z='не ';
end
Ust=['система ',Z,'устойчива'];
end